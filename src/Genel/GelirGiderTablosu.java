/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Genel;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.channels.FileChannel;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Enes Behlül
 */
public class GelirGiderTablosu extends javax.swing.JFrame {

    File gelir;
    File gider;
    DefaultTableModel dtm;
    PrintWriter output = null;
    BufferedReader input = null;
    double toplamGelir;
    double toplamGider;

    public void kasayiAyarla() throws IOException {
        gelir = new File("Gelir.txt");
        gider = new File("Gider.txt");
        if (gelir.exists()) {
            toplamGelir = 0;
            toplamGider = 0;
            try {
                input = new BufferedReader(new FileReader("Gelir.txt"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
            }
            String satir;
            while ((satir = input.readLine()) != null) {
                String[] dizi = satir.split("`");
                toplamGelir = toplamGelir + Double.parseDouble(dizi[5]);
            }
            lblToplamGelir.setText(toplamGelir+" TL");
        }
        if (gider.exists()) {
            try {
                input = new BufferedReader(new FileReader("Gider.txt"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
            }
            String satir2;
            while ((satir2 = input.readLine()) != null) {
                String[] dizi = satir2.split("`");
                toplamGider = toplamGider + Double.parseDouble(dizi[5]);
            }
            lblToplamGider.setText(toplamGider+" TL");
        }
        if (gelir.exists() && gider.exists()) {
            lblKasa.setText((toplamGelir - toplamGider)+" TL");
        } else if (!gelir.exists() && gider.exists()) {
            lblKasa.setText((0 - toplamGider)+" TL");
            lblToplamGelir.setText("0 TL");
        } else if (gelir.exists() && !gider.exists()) {
            lblKasa.setText(toplamGelir + " TL");
            lblToplamGider.setText("0 TL");
        } else if (!gelir.exists() && !gider.exists()) {
            lblToplamGelir.setText("Henüz kayıt yok.");
            lblToplamGider.setText("Henüz kayıt yok.");
            lblKasa.setText("0 TL");
        }
    }

    /**
     * Creates new form GelirGiderTablosu
     *
     * @throws java.io.IOException
     */
    public GelirGiderTablosu() throws IOException {
        initComponents();
        rbtnGelir.setSelected(true);
        this.setLocationRelativeTo(null);
        this.setTitle("Gelirler ve giderler - Konut yönetimi");
        dtm = new DefaultTableModel();
        dtm.setColumnIdentifiers(new String[]{"Durum", "Sıra NU.", "Tarih", "Fatura NU.", "Açıklama", "Yekün"});
        tblKayitlar.setModel(dtm);
        kasayiAyarla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKayitlar = new javax.swing.JTable();
        txtSiraNu = new javax.swing.JTextField();
        txtTarih = new javax.swing.JTextField();
        txtFaturaNu = new javax.swing.JTextField();
        txtAciklama = new javax.swing.JTextField();
        txtYekun = new javax.swing.JTextField();
        btn_TabloyaAktar = new javax.swing.JButton();
        lblSiraNu = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnDosyayaKaydet = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnTumGelirler = new javax.swing.JButton();
        rbtnGelir = new javax.swing.JRadioButton();
        rbtnGider = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblKasa = new javax.swing.JLabel();
        btnYenile = new javax.swing.JButton();
        btnTumGiderler = new javax.swing.JButton();
        btnSilinenGelirler = new javax.swing.JButton();
        btnSilinenGiderler = new javax.swing.JButton();
        btnKutucuklariTemizle = new javax.swing.JButton();
        btnVerileriYedekle = new javax.swing.JButton();
        lblToplamGelir = new javax.swing.JLabel();
        lblToplamGider = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(935, 527));
        setMinimumSize(new java.awt.Dimension(935, 527));
        setPreferredSize(new java.awt.Dimension(935, 527));
        setResizable(false);

        tblKayitlar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblKayitlar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblKayitlar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tblKayitlar);

        btn_TabloyaAktar.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btn_TabloyaAktar.setForeground(new java.awt.Color(0, 0, 153));
        btn_TabloyaAktar.setText("Tabloya aktar");
        btn_TabloyaAktar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TabloyaAktarActionPerformed(evt);
            }
        });

        lblSiraNu.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        lblSiraNu.setText("Sıra NU:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel2.setText("Tarih:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel3.setText("Fatura NU*:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel4.setText("Açıklama:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel5.setText("Yekün:");

        btnDosyayaKaydet.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btnDosyayaKaydet.setForeground(new java.awt.Color(0, 0, 153));
        btnDosyayaKaydet.setText("Dosyaya kaydet");
        btnDosyayaKaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDosyayaKaydetActionPerformed(evt);
            }
        });

        jLabel1.setText("*zorunlu değil");

        btnTumGelirler.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btnTumGelirler.setForeground(new java.awt.Color(0, 0, 153));
        btnTumGelirler.setText("Tüm gelirler");
        btnTumGelirler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTumGelirlerActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnGelir);
        rbtnGelir.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        rbtnGelir.setForeground(new java.awt.Color(0, 128, 0));
        rbtnGelir.setText("GELİR");

        buttonGroup1.add(rbtnGider);
        rbtnGider.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        rbtnGider.setForeground(new java.awt.Color(255, 0, 0));
        rbtnGider.setText("GİDER");
        rbtnGider.setMaximumSize(new java.awt.Dimension(85, 31));
        rbtnGider.setMinimumSize(new java.awt.Dimension(85, 31));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel6.setText("Toplam gelir:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel7.setText("Toplam gider:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel8.setText("Kasa:");

        lblKasa.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        lblKasa.setForeground(new java.awt.Color(0, 0, 255));

        btnYenile.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btnYenile.setForeground(new java.awt.Color(0, 0, 153));
        btnYenile.setText("Kasayı yeniden hesapla");
        btnYenile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYenileActionPerformed(evt);
            }
        });

        btnTumGiderler.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btnTumGiderler.setForeground(new java.awt.Color(0, 0, 153));
        btnTumGiderler.setText("Tüm giderler");
        btnTumGiderler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTumGiderlerActionPerformed(evt);
            }
        });

        btnSilinenGelirler.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btnSilinenGelirler.setForeground(new java.awt.Color(0, 0, 153));
        btnSilinenGelirler.setText("Silinen gelirler");
        btnSilinenGelirler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSilinenGelirlerActionPerformed(evt);
            }
        });

        btnSilinenGiderler.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btnSilinenGiderler.setForeground(new java.awt.Color(0, 0, 153));
        btnSilinenGiderler.setText("Silinen giderler");
        btnSilinenGiderler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSilinenGiderlerActionPerformed(evt);
            }
        });

        btnKutucuklariTemizle.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btnKutucuklariTemizle.setForeground(new java.awt.Color(0, 0, 153));
        btnKutucuklariTemizle.setText("Kutucukları temizle");
        btnKutucuklariTemizle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKutucuklariTemizleActionPerformed(evt);
            }
        });

        btnVerileriYedekle.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        btnVerileriYedekle.setForeground(new java.awt.Color(0, 0, 153));
        btnVerileriYedekle.setText("Tüm verileri yedekle");
        btnVerileriYedekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerileriYedekleActionPerformed(evt);
            }
        });

        lblToplamGelir.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        lblToplamGelir.setForeground(new java.awt.Color(0, 128, 0));
        lblToplamGelir.setText("jLabel9");

        lblToplamGider.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        lblToplamGider.setForeground(new java.awt.Color(255, 0, 0));
        lblToplamGider.setText("jLabel9");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(rbtnGelir)
                        .addGap(26, 26, 26)
                        .addComponent(rbtnGider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(lblSiraNu)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel2)
                        .addGap(126, 126, 126)
                        .addComponent(jLabel3)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel4)
                        .addGap(227, 227, 227)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(txtSiraNu, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTarih, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtFaturaNu, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtAciklama, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtYekun, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(btnKutucuklariTemizle)
                        .addGap(94, 94, 94)
                        .addComponent(jLabel1)
                        .addGap(338, 338, 338)
                        .addComponent(btn_TabloyaAktar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnTumGelirler)
                        .addGap(24, 24, 24)
                        .addComponent(btnTumGiderler)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel6)
                        .addGap(10, 10, 10)
                        .addComponent(lblToplamGelir, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel8)
                        .addGap(12, 12, 12)
                        .addComponent(lblKasa, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDosyayaKaydet))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnSilinenGelirler)
                        .addGap(24, 24, 24)
                        .addComponent(btnSilinenGiderler)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblToplamGider, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnYenile)
                        .addGap(18, 18, 18)
                        .addComponent(btnVerileriYedekle)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnGelir)
                    .addComponent(rbtnGider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSiraNu)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSiraNu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFaturaNu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAciklama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtYekun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnKutucuklariTemizle)
                            .addComponent(btn_TabloyaAktar))))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btnTumGelirler))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(btnTumGiderler))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel6))
                    .addComponent(btnDosyayaKaydet)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(lblKasa, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblToplamGelir, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSilinenGelirler)
                    .addComponent(btnSilinenGiderler)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(lblToplamGider, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnYenile)
                        .addComponent(btnVerileriYedekle)))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_TabloyaAktarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TabloyaAktarActionPerformed
        // TODO add your han,dling code here:
        dtm.setRowCount(0);
        gider = new File("Gider.txt");
        gelir = new File("Gelir.txt");
        boolean sorun = false;
        boolean sorun1 = false;
        boolean sorun2 = false;
        boolean sorun3 = false;
        long faturaNu = 0;
        int siraNU = 0;
        double tutar = 0;
        if (txtSiraNu.getText().length() > 0
                && txtTarih.getText().length() >= 6
                && txtYekun.getText().length() > 0
                && txtAciklama.getText().length() > 3) {
            try {
                siraNU = Integer.parseInt(txtSiraNu.getText());
                String satir;
                if (rbtnGelir.isSelected() && gelir.exists()) {
                    input = new BufferedReader(new FileReader("Gelir.txt"));
                    while ((satir = input.readLine()) != null) {
                        String[] dizi = satir.split("`");
                        if (Integer.parseInt(dizi[1]) == siraNU) {
                            JOptionPane.showMessageDialog(rootPane, siraNU + " daha önce sıra numarası olarak kullanıldı. Lütfen değiştiriniz.");
                            sorun1 = true;
                            break;
                        }
                    }
                } else if (rbtnGider.isSelected() && gider.exists()) {
                    input = new BufferedReader(new FileReader("Gider.txt"));
                    while ((satir = input.readLine()) != null) {
                        String[] dizi = satir.split("`");
                        if (Integer.parseInt(dizi[1]) == siraNU) {
                            JOptionPane.showMessageDialog(rootPane, "Sıra numarası olan" + siraNU + " daha önce kullanıldı. Lütfen değiştiriniz.");
                            sorun1 = true;
                            break;
                        }
                    }
                }

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Sıra numarası için sadece rakam giriniz.");
                sorun = true;
            } catch (FileNotFoundException ex) {
                Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                tutar = Double.parseDouble(txtYekun.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Yekün için yalnızca rakam giriniz.");
                sorun2 = true;
            }
            String tarih = txtTarih.getText();
            String aciklama = txtAciklama.getText();
            if (txtFaturaNu.getText().length() > 0) {
                try {
                    faturaNu = Long.parseLong(txtFaturaNu.getText());
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(rootPane, "Fatura numarası için yalnızca rakam giriniz.");
                    sorun3 = true;
                }
            }
            if (sorun1 == false && sorun == false && sorun2 == false && sorun3 == false && rbtnGelir.isSelected()) {
                dtm.addRow(new Object[]{"Gelir", siraNU, tarih, faturaNu, aciklama, tutar});
            } else if (sorun1 == false && sorun == false && sorun2 == false && sorun3 == false && rbtnGider.isSelected()) {
                dtm.addRow(new Object[]{"Gider", siraNU, tarih, faturaNu, aciklama, tutar});
            } else if (sorun1 == false && sorun == false && sorun2 == false && sorun3 == false && txtFaturaNu.getSelectedText().length() == 0 && rbtnGider.isSelected()) {
                dtm.addRow(new Object[]{"Gider", siraNU, tarih, "", aciklama, tutar});

            } else if (sorun1 == false && sorun == false && sorun2 == false && sorun3 == false && txtFaturaNu.getSelectedText().length() == 0 && rbtnGelir.isSelected()) {
                dtm.addRow(new Object[]{"Gelir", siraNU, tarih, "", aciklama, tutar});
            }
        } else if (txtSiraNu.getText().length() == 0
                || txtTarih.getText().length() == 0
                || txtYekun.getText().length() == 0
                || txtAciklama.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Kutucuklar boş bırakılamaz.");
        }
        if (txtTarih.getText().length() < 6 && txtTarih.getText().length() != 0) {
            JOptionPane.showMessageDialog(rootPane, "Tarih daha güzel olabilir.");
        }
    }//GEN-LAST:event_btn_TabloyaAktarActionPerformed

    private void btnDosyayaKaydetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDosyayaKaydetActionPerformed
        // TODO add your handling code here:
        if (tblKayitlar.getSelectedRowCount() == 1) {
            int seciliSatir = tblKayitlar.getSelectedRow();
            if (dtm.getValueAt(tblKayitlar.getSelectedRow(), 0) == "Gelir") {
                try {
                    output = new PrintWriter(new FileWriter("Gelir.txt", true));
                    output.println(dtm.getValueAt(seciliSatir, 0) + "`" + dtm.getValueAt(seciliSatir, 1) + "`" + dtm.getValueAt(seciliSatir, 2) + "`" + dtm.getValueAt(seciliSatir, 3) + "`" + dtm.getValueAt(seciliSatir, 4) + "`" + dtm.getValueAt(seciliSatir, 5));
                    output.close();
                    JOptionPane.showMessageDialog(rootPane, "Gelir olarak kaydedildi.");
                    dtm.removeRow(tblKayitlar.getSelectedRow());
                    kasayiAyarla();
                } catch (IOException ex) {
                    Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Bir sorun oluştu ve gelir kaydedilemedi. Lütfen yazlılmcıya iletiniz.");
                }
            } else if (dtm.getValueAt(tblKayitlar.getSelectedRow(), 0) == "Gider") {
                try {
                    output = new PrintWriter(new FileWriter("Gider.txt", true));
                    output.println(dtm.getValueAt(seciliSatir, 0) + "`" + dtm.getValueAt(seciliSatir, 1) + "`" + dtm.getValueAt(seciliSatir, 2) + "`" + dtm.getValueAt(seciliSatir, 3) + "`" + dtm.getValueAt(seciliSatir, 4) + "`" + dtm.getValueAt(seciliSatir, 5));
                    output.close();
                    JOptionPane.showMessageDialog(rootPane, "Gider olarak kaydedildi.");
                    dtm.removeRow(tblKayitlar.getSelectedRow());
                    kasayiAyarla();
                } catch (IOException ex) {
                    Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, "Bir sorun oluştu ve gider kaydedilemedi. Lütfen yazlılmcıya iletiniz.");
                }
            }
        } else if (tblKayitlar.getSelectedRowCount() != 1) {
            JOptionPane.showMessageDialog(rootPane, "Kayıttan önce bir seçim yapınız.");
        }
    }//GEN-LAST:event_btnDosyayaKaydetActionPerformed

    private void btnYenileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYenileActionPerformed
        try {
            // TODO add your handling code here:
            kasayiAyarla();
        } catch (IOException ex) {
            Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnYenileActionPerformed

    private void btnTumGelirlerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTumGelirlerActionPerformed
        try {
            // TODO add your handling code here:
            TumGelirler tgl = new TumGelirler();
            tgl.setVisible(true);
            tgl.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        } catch (IOException ex) {
            Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTumGelirlerActionPerformed

    private void btnTumGiderlerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTumGiderlerActionPerformed
        try {
            // TODO add your handling code here:
            TumGiderler tgd = new TumGiderler();
            tgd.setVisible(true);
            tgd.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        } catch (IOException ex) {
            Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTumGiderlerActionPerformed

    private void btnSilinenGelirlerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSilinenGelirlerActionPerformed
        try {
            // TODO add your handling code here:
            SilinenGelirler sgl = new SilinenGelirler();
            sgl.setVisible(true);
            sgl.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        } catch (IOException ex) {
            Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSilinenGelirlerActionPerformed

    private void btnSilinenGiderlerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSilinenGiderlerActionPerformed
        try {
            // TODO add your handling code here:
            SilinenGiderler sgd = new SilinenGiderler();
            sgd.setVisible(true);
            sgd.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        } catch (IOException ex) {
            Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSilinenGiderlerActionPerformed

    private void btnKutucuklariTemizleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKutucuklariTemizleActionPerformed
        // TODO add your handling code here:
        txtAciklama.setText("");
        txtFaturaNu.setText("");
        txtSiraNu.setText("");
        txtTarih.setText("");
        txtYekun.setText("");
    }//GEN-LAST:event_btnKutucuklariTemizleActionPerformed

    private void btnVerileriYedekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerileriYedekleActionPerformed
        // TODO add your handling code here:
        boolean sorunYok = true;
        boolean sorunYok2 = true;
        boolean sorunYok3 = true;
        boolean sorunYok4 = true;
        boolean sorunYok5 = true;
        boolean sorunYok6 = true;
        boolean sorunYok7 = true;
        boolean sorunYok8 = true;
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss");
        String suAnkiTarih = sdf.format(cal.getTime());
        FileChannel inputChannel = null;
        FileChannel outputChannel = null;
        File gelirKaynak = new File("Gelir.txt");
        if (gelirKaynak.exists()) {
            File gelirHedef = new File("D:\\GelirGider\\Yedekler\\TumGelirler\\Gelir" + suAnkiTarih + ".txt");
            try {
                inputChannel = new FileInputStream("Gelir.txt").getChannel();
                outputChannel = new FileOutputStream(gelirHedef).getChannel();
                outputChannel.transferFrom(inputChannel, 0, inputChannel.size());
            } catch (IOException ex) {
                sorunYok = false;
                JOptionPane.showMessageDialog(rootPane, "Bir sorun oluştu. Lütfen uygulamayı yazan arkadaşla iletişime geçiniz. Sorun nu. 1");
                Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    inputChannel.close();
                    outputChannel.close();
                } catch (IOException ex) {
                    sorunYok2 = false;
                    JOptionPane.showMessageDialog(rootPane, "Bir sorun oluştu. Lütfen uygulamayı yazan arkadaşla iletişime geçiniz. Sorun nu. 2");
                    Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        File giderKaynak = new File("Gider.txt");
        if (giderKaynak.exists()) {
            File giderHedef = new File("D:\\GelirGider\\Yedekler\\TumGiderler\\Gider" + suAnkiTarih + ".txt");
            try {
                inputChannel = new FileInputStream("Gider.txt").getChannel();
                outputChannel = new FileOutputStream(giderHedef).getChannel();
                outputChannel.transferFrom(inputChannel, 0, inputChannel.size());
            } catch (IOException ex) {
                sorunYok3 = false;
                JOptionPane.showMessageDialog(rootPane, "Bir sorun oluştu. Lütfen uygulamayı yazan arkadaşla iletişime geçiniz. Sorun nu. 3");
                Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    inputChannel.close();
                    outputChannel.close();
                } catch (IOException ex) {
                    sorunYok4 = false;
                    JOptionPane.showMessageDialog(rootPane, "Bir sorun oluştu. Lütfen uygulamayı yazan arkadaşla iletişime geçiniz. Sorun nu. 4");
                    Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        File silinenGelirKaynak = new File("SilinenGelirler.txt");
        if (silinenGelirKaynak.exists()) {
            File silinenGelirHedef = new File("D:\\GelirGider\\Yedekler\\SilinenGelirler\\SilinenGelirler" + suAnkiTarih + ".txt");
            try {
                inputChannel = new FileInputStream("SilinenGelirler.txt").getChannel();
                outputChannel = new FileOutputStream(silinenGelirHedef).getChannel();
                outputChannel.transferFrom(inputChannel, 0, inputChannel.size());
            } catch (IOException ex) {
                sorunYok5 = false;
                JOptionPane.showMessageDialog(rootPane, "Bir sorun oluştu. Lütfen uygulamayı yazan arkadaşla iletişime geçiniz. Sorun nu. 5");
                Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    inputChannel.close();
                    outputChannel.close();
                } catch (IOException ex) {
                    sorunYok6 = false;
                    JOptionPane.showMessageDialog(rootPane, "Bir sorun oluştu. Lütfen uygulamayı yazan arkadaşla iletişime geçiniz. Sorun nu. 6");
                    Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        File silinenGiderKaynak = new File("SilinenGiderler.txt");
        if (silinenGiderKaynak.exists()) {
            File silinenGiderHedef = new File("D:\\GelirGider\\Yedekler\\SilinenGiderler\\SilinenGiderler" + suAnkiTarih + ".txt");
            try {
                inputChannel = new FileInputStream("SilinenGiderler.txt").getChannel();
                outputChannel = new FileOutputStream(silinenGiderHedef).getChannel();
                outputChannel.transferFrom(inputChannel, 0, inputChannel.size());
            } catch (IOException ex) {
                sorunYok7 = false;
                JOptionPane.showMessageDialog(rootPane, "Bir sorun oluştu. Lütfen uygulamayı yazan arkadaşla iletişime geçiniz. Sorun nu. 7");
                Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    inputChannel.close();
                    outputChannel.close();
                } catch (IOException ex) {
                    sorunYok8 = false;
                    JOptionPane.showMessageDialog(rootPane, "Bir sorun oluştu. Lütfen uygulamayı yazan arkadaşla iletişime geçiniz. Sorun nu. 8");
                    Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        if (sorunYok && sorunYok2 && sorunYok3 && sorunYok4 && sorunYok5 && sorunYok6 && sorunYok7 && sorunYok8) {
            JOptionPane.showMessageDialog(rootPane, "Tüm dosyalar yedeklendi.");
        }
    }//GEN-LAST:event_btnVerileriYedekleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GelirGiderTablosu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GelirGiderTablosu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GelirGiderTablosu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GelirGiderTablosu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new GelirGiderTablosu().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(GelirGiderTablosu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDosyayaKaydet;
    private javax.swing.JButton btnKutucuklariTemizle;
    private javax.swing.JButton btnSilinenGelirler;
    private javax.swing.JButton btnSilinenGiderler;
    private javax.swing.JButton btnTumGelirler;
    private javax.swing.JButton btnTumGiderler;
    private javax.swing.JButton btnVerileriYedekle;
    private javax.swing.JButton btnYenile;
    private javax.swing.JButton btn_TabloyaAktar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblKasa;
    private javax.swing.JLabel lblSiraNu;
    private javax.swing.JLabel lblToplamGelir;
    private javax.swing.JLabel lblToplamGider;
    private javax.swing.JRadioButton rbtnGelir;
    private javax.swing.JRadioButton rbtnGider;
    private javax.swing.JTable tblKayitlar;
    private javax.swing.JTextField txtAciklama;
    private javax.swing.JTextField txtFaturaNu;
    private javax.swing.JTextField txtSiraNu;
    private javax.swing.JTextField txtTarih;
    private javax.swing.JTextField txtYekun;
    // End of variables declaration//GEN-END:variables
}
